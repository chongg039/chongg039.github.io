<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Co1driver 的个人博客</title>
    <link>https://chongg039.cn/post/</link>
    <description>Recent content in Posts on Co1driver 的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright 2014-{year}</copyright>
    <lastBuildDate>Sun, 12 May 2019 19:10:25 +0800</lastBuildDate>
    
	<atom:link href="https://chongg039.cn/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2019 Mid Term Summary</title>
      <link>https://chongg039.cn/post/2019-mid-term-summary/</link>
      <pubDate>Sun, 12 May 2019 19:10:25 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/2019-mid-term-summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>高级计算机视觉知识点总结</title>
      <link>https://chongg039.cn/post/advanced-computer-vision/</link>
      <pubDate>Sun, 12 May 2019 19:09:40 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/advanced-computer-vision/</guid>
      <description>我自己在做的方向是 NLP 相关，但这学期也选修了高级计算机视觉这门课程，其中很大一部分内容都是传统的视觉算法，和现在被人熟知的机器学习相关的 CV 领域还是有很大区别。由于这门课程也是学院第一次开课，所以也没有办法去做针对性的复习，故在此作以下学习记录，写下自己的理解，希望将来能温故而知新。
特征提取算法 涉及到的特征提取算法主要有 Harris 角点检测算法、Canny 边缘检测算法和 SIFT 尺度不变特征变换算法。
Harris Corner Detection 首先要理解角点和其具有的特征：
 角点是轮廓之间的交点 针对同一场景，即使视角发生变化，角点通常仍具备稳定的特征 角点附近的区域的像素点的梯度无论是方向还是幅值都会有较大的变化  针对以上角点的特征，Harris 算法的基本思想是：使用一个固定大小的窗口在图向上进行任意方向上的滑动，比较滑动前后的窗口中像素灰度变化的程度。若沿任意方向的滑动都有较大的灰度变化，则认为该窗口中存在角点。
现在要做的就是设计一个函数，来衡量滑动前后的灰度值变化，并设置一个阈值，当灰度变化超过这个阈值认为存在角点。
这个函数可以作如下表示：
$$ E(u, v) = \sum_{x, y} w(x, y) [I(x+u, y+v) - I(x, y)]^2 $$ 其中 \w(x, y)\ 是窗口函数（矩阵），常用的有 (0, 1) 函数和高斯函数，I(x, y) 表示灰度强度值。下面要用到泰勒展开式处理这个函数。
二维泰勒展开式为： $$ f(x+u, y+v) = f(x, y) + uf_x(x, y) + vf_y(x, y) + &amp;hellip; $$ 抛开 $w(x, y)$ ，先处理 $\sum[&amp;hellip;]^2$ 这部分： $$ \sum[I(x+u, y+v) - I(x, y)]^2 = \sum[I(x, y) + uI_x + vI_y - I(x, y)]^2 =\sum(u^2I_x^2 + 2uvI_xI_y + v^2I_y^2) =\sum\bigg( \left[\begin{array}{cc} u &amp;amp; v \end{array} \right] \left[\begin{array}{cc} I_x^2 &amp;amp; I_xI_y</description>
    </item>
    
    <item>
      <title>蛋白质结构预测比赛知识储备</title>
      <link>https://chongg039.cn/post/knowledge-of-casp/</link>
      <pubDate>Thu, 17 Jan 2019 14:25:08 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/knowledge-of-casp/</guid>
      <description>生物分子结构 有关生物分子四级结构的信息请参照维基百科相关词条。
蛋白质结构表征方式（氨基酸残基）  接触图（contact maps），接触图使得不需要 3D 渲染软件，就能够快速形象化地探索结构特征。此外，接触图的基本 2D 矩阵（称为接触矩阵），能够天然地作为随后自动知识发现或机器学习任务的数值输入。 距离图（distance maps） 氢键图  氨基酸（Amino acids） 氨基酸残基（amino acid residue） 组成多肽的氨基酸在相互结合时，由于其部分基团参与了肽键的形成而失去一分子水，因此把多肽中的氨基酸单位称为氨基酸残基，即由肽键链接的氨基酸失水部分。
它是一个分子的一部分，而不是一个分子。
氨基酸的氨基上缺了一个氢，羧基上缺了一个羟基。
简单的说，氨基酸残基就是指不完整的氨基酸。一个完整的氨基酸包括一个羧基（—COOH)，一个氨基(—NH2)，一个H，一个R基。缺少任何一个部分都算是氨基酸残基，并没有包括肽键的。
如甘氨酸残基为：—NH—CH2—CO—。
蛋白质中氨基酸残基数目的估算：氨基酸残基的数目=蛋白质分子量/110
蛋白质结构 蛋白质结构是指蛋白质分子的空间结构。作为一类重要的生物大分子，蛋白质主要由 碳、氢、氧、氮、硫等化学元素组成。所有蛋白质都是由 20 种不同的 L 型 α 氨基酸连接形成的多聚体，在形成蛋白质后，这些氨基酸又被称为残基。蛋白质和多肽之间的界限并不是很清晰，有人基于发挥功能性作用的结构域所需的残基数认为，若残基数少于 40 ，就称之为多肽或肽。要发挥生物学功能，蛋白质需要正确折叠为一个特定构型，主要是通过大量的非共价相互作用（如氢键，离子键，范德华力和疏水作用）来实现；此外，在一些蛋白质（特别是分泌性蛋白质）折叠中，二硫键也起到关键作用。为了从分子水平上了解蛋白质的作用机制，常常需要测定蛋白质的三维结构。由研究蛋白质结构而发展起来了结构生物学，采用了包括X射线晶体学、核磁共振等技术来解析蛋白质结构。
一定数量的残基对于发挥某一生物化学功能是必要的；40 - 50 个残基通常是一个功能性结构域大小的下限。蛋白质大小的范围可以从这样一个下限一直到数千个残基。目前估计的蛋白质的平均长度在不同的物种中有所区别，一般约为 200 - 380 个残基，而真核生物的蛋白质平均长度比原核生物长约 55% 。更大的蛋白质聚合体可以通过许多蛋白质亚基形成；如由数千个肌动蛋白分子聚合形成蛋白纤维。
不同层次的蛋白质结构 蛋白质的分子结构可划分为四级，以描述其不同的方面：
 蛋白质一级结构：组成蛋白质多肽链的线性氨基酸序列。 蛋白质二级结构：依靠不同氨基酸之间的 C=O 和 N-H 基团间的氢键形成的稳定结构，主要为 α螺旋 和 β折叠 。 蛋白质三级结构：通过多个二级结构元素在三维空间的排列所形成的一个蛋白质分子的三维结构。 蛋白质四级结构：用于描述由不同多肽链（亚基）间相互作用形成具有功能的蛋白质复合物分子。  除此之外还有侧链结构，根据侧链结构的不同可以分为 20 种常见氨基酸，各自在蛋白质中扮演着重要的角色。
定义不同类型的二级结构有不同的方法，最常用的方法是通过主链原子之间的氢键的排列方式来判断的。而在蛋白质完全折叠的状态下，这些氢键可以得到稳定。
更多详细内容参照维基百科蛋白质结构条目。
蛋白质结构预测 蛋白质结构预测 (Protein structure prediction) 是指从蛋白质的氨基酸序列中预测蛋白质的三维结构。也就是说，从蛋白质的一级结构预测它的折叠和二级、三级、四级结构。当前蛋白质结构预测技术的性能在蛋白质结构预测技术的关键测试（CASP）实验中被评测，蛋白质结构预测的网络服务器连续的评测是由社区项目 CAMEO3D 执行。</description>
    </item>
    
    <item>
      <title>2018 年终自检</title>
      <link>https://chongg039.cn/post/2018-summary/</link>
      <pubDate>Mon, 07 Jan 2019 14:14:55 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/2018-summary/</guid>
      <description>这篇文章现在才写是因为复习矩阵考试而耽误了。在这里提一句感谢寒号鸟学长的知乎专栏以及实验室小伙伴的耐心指点，让我这个数学基础并不是那么好的学生勉强看懂了矩阵理论讲的内容。另外之前翻译的那本书鸽了一段时间，因为我实在没有想到成电的研一课业压力会这么大，也就没有选修随机过程。之后可能会继续进行翻译工作，不过可能进度会比较慢罢了。
2018年对我来说算是比较重要的一年。3月初回学校进行预面试，并且成功通过复式成为了（原）自动推理实验室的一员。整个过程还是很轻松愉快的，当时也感觉 f 老师是个很 nice 的人，虽然现在并不是这么觉得。四五月份抽出时间完成了水水的毕业设计，之后便做了一个比较私人的决定：去一趟稻城亚丁转换下心情，也算是做一次毕业旅行吧。
稻城白塔
牛奶海
牦牛兄弟
虽然恶劣的天体条件和贫瘠的山路让人身心匹配，不过稻城之行还是领略了一下藏区的风土人情，呼吸了一下高原干净的空气。回来后老师叫我去教研室我也找了个借口溜了，回家和爸钓了几天鱼。
研一的生活比我想象的要紧凑很多。我对 f 老师的评价是：一个理想主义的嘴炮王。具体为什么这么评价他就不谈了，估计当你的导师想要同时研究图推理、CV、nlp、小分子合成、基因优化、靶向药生成、量子机器学习的时候，你也会这么评价他。估计之后很长一段时间我也许就要去川大华西那边做实验去了。
相比本科时期的工作室生活，读研的第一个学期还是收获很多的，最起码机器学习方面的知识学习了不少。而且重拾了 C++ ，最近为了863也在重新写起了 Java 。虽然水平不高，但总算是在成长，视野也在开阔。以后也许在 z 师兄的指导下先搞两年 nlp ，毕竟也和 f 老师做的基因序列任务有点关系。前一段时间参加了 kaggle 的一个 CV 比赛，虽然没有实现一个很好的模型，但也算一次体验，之后有想法会继续参加。
读书方面，下半年快年底买了一个 kindle ，虽然目前只是用来看技术相关的书籍。作为我的第一台电子墨水设备体验很不错，以后争取多读一些文学作品。没有时间行万里路，那就争取做到读万卷书。
2019 年还得继续努力，人菜就要多学习。</description>
    </item>
    
    <item>
      <title>我的第一台 kindle</title>
      <link>https://chongg039.cn/post/my-kindle/</link>
      <pubDate>Thu, 03 Jan 2019 20:09:57 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/my-kindle/</guid>
      <description>说来惭愧，一直想入手一个 kindle 但有点舍不得，怕买来成了泡面盖子。一直等到了 KPW4 的发售，张大妈上推送了一个拼多多的链接，800+，带原装保护壳也才850。这岂不是白送？果断下单，也算是为信仰充值了吧。
下面是个简短的开箱。
使用体验：总体来说体验还是不错的，180余克的体重，纯平的屏幕设计，细腻的屏幕，多级的背光以及不算慢的翻页体验，让我对这一款产品还是比较满意的。但是这样一款几年更新一代的产品竟然还在用 Micro USB 的接口，算是唯一美中不足之处吧。
至于使用方式，我主要是用来看一些技术上的书籍，减少自己看手机的时间。看双页的论文是不要想了，在6寸的屏幕上表现简直是灾难。书的获取方式、导入方式有需求的朋友请自行 Google ，我就不再这里传播了，希望以后能尽量支持正版。</description>
    </item>
    
    <item>
      <title>FMAM - 1.7：Additional Topics</title>
      <link>https://chongg039.cn/post/fmam-content-1.7/</link>
      <pubDate>Fri, 03 Aug 2018 08:31:59 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.7/</guid>
      <description>第 1.2, 1.3, 1.4, 1.5 和 1.6 节涵盖了 PH 分布和多元 PH 分布的基本理论。在本节中，我们将讨论概括和一些概括 PH 分布的理论问题。
1.7.1 离散的 PH 分布 考虑具有 m + 1 个状态的离散时间马尔可夫链，其概率矩阵为 $$ P= \biggl( \begin{matrix} T &amp;amp; \pmb{T ^ {0}} \\ 0 &amp;amp; 1
\end{matrix} \biggl) $$ 吸收到状态 \(m+1\) 的时间表示为 \(X\) ，我们将其定义为离散时间的 PH 随机变量。给出初始概率向量 \((\pmb{\alpha}, 1-\pmb{\alpha e})\) ，很容易得到 $$ P\{X=n\}= \begin{cases} 1 - \pmb{\alpha e} &amp;amp; if \quad n=0; \pmb{\alpha} T ^ {n-1} \pmb{T ^ 0} &amp;amp; if \quad n=1, 2, &amp;hellip; \end{cases} $$</description>
    </item>
    
    <item>
      <title>FMAM - 1.6：PH 分布的参数估计</title>
      <link>https://chongg039.cn/post/fmam-content-1.6/</link>
      <pubDate>Thu, 02 Aug 2018 22:02:09 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.6/</guid>
      <description>在概率论、随机建模和统计学中，概率分布的参数估计是一个基本问题。有关参数估计的参考资料的数量是巨大的。在本节中，我们主要讨论 PH 分布的参数估计。
PH分布的参数估计是指为一个来自样本 \({y _ {1}, y _ {2}, &amp;hellip;, y _ {n}}\) 的 PH 随机变量 Y 找到一个 m 阶的 PH 表示 \((\alpha, T)\)。样本中，\(y _ {k}\) 被称为样本点，n 被称作样本大小。我们假定样本点是独立收集的，那么我们定义 \({Y _ {1}, Y _ {2}, &amp;hellip;, Y _ {n}}\) 是独立同分布的随机变量 (i.i.d.r.v.s) ，它们具有和 Y 一样的分布。样本点 \(y _ {k}\) 是 \(Y _ {k}\) 的一个实现（可能翻译不准确？）。同样的，我们定义 \(\{I(t), t \geq 0 \}\) 作为与 Y 相关的底层马尔可夫链 (the underlying Markov chain) 。
例子1.6.1：略 命题1.6.1 (Asmussen et al.</description>
    </item>
    
    <item>
      <title>FMAM - 1.5：多元 PH 分布</title>
      <link>https://chongg039.cn/post/fmam-content-1.5/</link>
      <pubDate>Thu, 02 Aug 2018 16:01:51 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.5/</guid>
      <description>考虑连续时间上的马尔可夫链 \( \{ Y(t), t \geq 0 \} \)，且具有有限状态空间 \( \{1, 2, &amp;hellip;, m \} \)，无穷小的生成矩阵 \(Q\) 和初始分布 \(\alpha\) 。令 \(A _ {k} \) 是 \( \{ 1, 2, &amp;hellip;, m \} \) 的子集，其中 \(k=1, &amp;hellip;, K\)，假设交集\( \{ A _ {k}, k=1, &amp;hellip;, K \} \) 是非空的且马尔可夫链将以 1 的概率被吸收到交叉点。
定义1.5.1 定义 $$ X _ {k} = min{t:Y(t) \in A _ {k}, t \geq 0}, k = 1, &amp;hellip;, K $$ 随机向量 \( X = (X _ {1}, X _ {2}, &amp;hellip;, X _ {K})\) 则被认为具有多元的 PH 分布（MPH）和多元的 PH 表示 \((\alpha, Q, A _ {k}, k = 1, &amp;hellip;, K)\) 。</description>
    </item>
    
    <item>
      <title>FMAM - 1.4：PH 分布和 PH 表示</title>
      <link>https://chongg039.cn/post/fmam-content-1.4/</link>
      <pubDate>Thu, 26 Jul 2018 10:30:01 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.4/</guid>
      <description>注：本书中 &amp;quot;order&amp;quot; 译作 “阶“，原因如下： 在 &amp;quot;Stat Trek&amp;quot; 上 &amp;quot;Matrix Order&amp;quot; 的释义为： The number of rows and columns that a matrix has is called its order or its dimension. By convention, rows are listed first; and columns, second. Thus, we would say that the order (or dimension) of the matrix below is 3 x 4, meaning that it has 3 rows and 4 columns. 矩阵具有的行数和列数 称为其 顺序 或 维度 。按照惯例，首先列出行，再给出列。因此，我们可以说下面矩阵的顺序（或维度）是3 x 4，这意味着它有 3 行 4 列。 本文中主要研究方阵，因此将 &amp;quot;the order of the matrix is n&amp;quot; 译作 ”n 阶方阵”  1.</description>
    </item>
    
    <item>
      <title>FMAM - 1.3：PH 分布的闭包属性</title>
      <link>https://chongg039.cn/post/fmam-content-1.3/</link>
      <pubDate>Fri, 20 Jul 2018 15:59:56 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.3/</guid>
      <description>在本节中，我们展示了一组 PH 分布在一些操作下是封闭的情况（例如，“min”，“max”，“+”）。闭包属性证明了随机建模中 PH 分布在数学上的动态可操作性，这体现了他们在应用中的关键作用。首先，我们考虑采用马尔可夫链方法练习 1.1.5 , 1.1.6 和 1.1.9 。
例子1.3.1： 假定 \(X _ {1} \) 和 \(X _ {2}\) 是分别具有参数 \(\lambda _ {1} \) 和 \(\lambda _ {2} \) 的相互独立的指数随机变量，显示 \(min\{X _ {1}, X _ {2}\} \) ，\(max\{X _ {1}, x _ {2}\}\) 和 \(X _ {1} + X _ {2}\) 服从 PH 分布，并找出对应的 PH 表示。
回想一个和 \(X _ {1}\) 相关的两阶段连续时间马尔可夫链，令 \(I _ {1}(t)\) 为 \(t\) 时刻的底层马尔可夫链的阶段。那么两阶段底层马尔可夫链 \(\{I _ {1}(t), t \geq 0\}\) 的无穷小生成矩阵由下面给出 $$ Q _ {1} = \begin{matrix}1 \\ 2 \end{matrix}\begin{pmatrix}-\lambda _ {1} &amp;amp; \lambda _ {1} \\ 0 &amp;amp; 0\end{pmatrix} $$ 其中阶段 2 是吸收阶段。同样地，\(I _ {2}(t)\) 由和 \(X _ {2}\) 相关联的两阶段底层马尔可夫链定义。两条马尔可夫链 \(\{I _ {1}(t), t \geq 0\}\) 和 \(\{I _ {2}(t), t \geq 0\}\) 是相互独立的。</description>
    </item>
    
    <item>
      <title>FMAM - 1.2：PH 分布的定义和基本属性</title>
      <link>https://chongg039.cn/post/fmam-content-1.2/</link>
      <pubDate>Thu, 19 Jul 2018 20:11:50 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.2/</guid>
      <description>PH 分布在 Neuts（1975）中被引入来概括指数分布。在本节中，我们给出了相位分布的一个代数定义和一个概率定义，并介绍一些基本的属性。
定义1.2.1： 如果非负随机变量 X 的分布函数由下式给出，则它具有相位类型分布（PH分布）：
$$ F(t)=P\{X \leq t\}=1-\pmb{\alpha} exp(Tt) \pmb{e} \equiv 1- \pmb{\alpha}(\sum _ {n=0}^\infty \frac{t^n}{n!}T^n) \pmb{e},t \geq 0 \tag{1.9} $$
其中：
 \(\pmb{e}\) 是全为 1 的列向量； \(\pmb{\alpha}\) 是 m 阶的随机行向量（substochastic pmbtor 翻译不准确？），即 \(\pmb{\alpha}\) 是行向量，\(\pmb{\alpha}\) 中的所有元素都是非负的，\(\pmb{\alpha} \pmb{e} \leq 1\) ，其中 m 是正整数； T 是 m 阶的子生成矩阵（subgenerator 翻译不准确？），即 T 是 \(m \times m\) 矩阵，使得 (1) 对角线所有元素都是负的；(2) 所有非对角线元素都是非负的；(3) 一行所有元素之和均为非正数，且对所有行有效；(4) T 是可逆的。  我们称 T 为 PH 发生器，2 元组 \((\pmb{\alpha}, T)\) 称为 m 阶相位分布的相位表示（PH表示）。</description>
    </item>
    
    <item>
      <title>FMAM - 1.1：指数分布</title>
      <link>https://chongg039.cn/post/fmam-content-1.1/</link>
      <pubDate>Wed, 18 Jul 2018 17:01:14 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-content-1.1/</guid>
      <description>本章节定义了指数分布和与指数分布相关联的一些基本属性。
定义1.1.1： 如果一个非负随机变量Ｘ的概率分布函数（即累积分布函数 CDF）满足如下形式：
$$ F(t)=P\{X \leq t\}=1-exp(-\lambda t) \equiv 1-\sum _ {n=0}^{\infty}\frac{(-\lambda)^n t^n}{n!}, t \geq 0 $$
则称非负随机变量Ｘ服从指数分布。其中 \(\lambda \) 是正实数，将Ｘ称为参数为 \(\lambda \) 的指数随机变量。
取分布函数 F(t) 的导数，即得到指数分布的概率密度函数：
$$ f(t)=\frac{dF(t)}{dt}=\lambda exp(- \lambda t), t \geq 0 $$
练习1.1.1： 式子 $$ \int _ {0} ^ {\infty} \lambda e ^ {- \lambda t} dt=1 $$ 使用了分部积分法，试着从概率上解释（不使用任何计算）为什么积分的结果是 1 。
图 1.1 绘制了 \(\lambda = 1\) 和 \(\lambda = 5\) 时的指数分布的概率密度函数，这两者表现出了类似“指数”的形状。
练习1.1.2： 分别绘制 \(\lambda = 0.</description>
    </item>
    
    <item>
      <title>FMAM - 预备内容：指数分布和 Erlang 分布 - Chapter 1 </title>
      <link>https://chongg039.cn/post/fmam-prepare-2/</link>
      <pubDate>Tue, 17 Jul 2018 17:19:48 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-prepare-2/</guid>
      <description>泊松分布是离散变量的随机分布，发生的次数之间是离散的。指数分布则针对连续型随机变量定义，即时间必须是连续的。
指数分布可以用来表示独立随机事件发生的时间间隔，比如旅客进入机场的时间间隔、打进客服中心电话的时间间隔、中文维基百科新条目出现的时间间隔等等。 – wikipedia
粗略地可以认为这两个分布之间有一种“倒数”的关系。
指数分布概率密度函数：$$f(x)=\lambda e^{-\lambda x},x \in [0,+\infty)$$
其中 \(\lambda &amp;gt;0\) 是分布的一个参数，常被称为率参数（rate parameter）。即每单位时间发生该事件的次数。
累积分布函数：$$P(X\leqslant x)=1- e^{-\lambda x},x \in [0,+\infty)$$
注意：若令\(\theta = \frac{1}{\lambda}\)，概率密度：\(p=\frac{1}{\theta}e^{-x/\theta}\)，分布函数：\(P(X\leqslant x)=F(x)=1-e^{-x/\theta},x \in [0,+\infty)\)
这个 \(\lambda \) 就是泊松分布中的 \(\lambda \)，此时指数分布的期望就是 \(EX=\theta \quad (\lambda=1/\theta)\) 。
指数分布的描述对象是“连续型随机变量”。指数分布是泊松过程的事件间隔的分布：泊松分布表示的是事件发生的次数，“次数”这个是离散变量，所以泊松分布是离散随机变量的分布；指数分布是两件事情发生的平均间隔时间，“时间”是连续变量，所以指数分布是一种连续随机变量的分布。
指数分布的实例：
 旅客进机场的时间间隔 网站访问的时间间隔 婴儿出生的时间间隔  泊松分布是单位时间内独立事件发生次数的概率分布，指数分布是独立事件的时间间隔的概率分布。注两者的前提的前提是”独立事件”，事件之间不能有关联。
爱尔朗分布（Erlang Distribution）是一种连续型概率分布，该分布与指数分布一样多用来表示独立随机事件发生的时间间隔。相比于指数分布，爱尔朗分布能更好地对现实数据进行拟合（更适用于多个串行过程，或无记忆性假设不显著的情况下）。除非退化为指数分布，爱尔朗分布不具有无记忆性（或马尔可夫性质），因此对其进行分析相对困难一些。一般通过将爱尔朗过程分解为多个指数过程的技巧来对爱尔朗分布进行分析。
遵循爱尔朗分布的随机变量可以被分解多个同参数指数分布随机变量之和，该性质使得爱尔朗分布被广泛用于排队论中。
爱尔朗分布有两个参数，阶数（stage）\(k\) 和均值 \(\mu\) （也有用 \(\lambda ={\frac {1}{\mu }}\) 来代替的）。具有阶数 \(k\) 的爱尔朗过程被称为k阶爱尔朗（k-stage Erlang），对应的随机变量可被视为k个独立同参数指数分布随机变量之和。
依据上下文环境不同，均值参数 \(\mu\) 可以指整个爱尔朗分布的均值 \(\mu _ {0}\) 也可以指每个指数分布的均值 \(\mu _ {i}\) 。两者的关系是： $$\mu _ {i}={\frac {\mu _ {0}}{k}}$$</description>
    </item>
    
    <item>
      <title>FMAM - 预备内容：从泊松分布到泊松过程 - Chapter 1</title>
      <link>https://chongg039.cn/post/fmam-prepare-1/</link>
      <pubDate>Mon, 16 Jul 2018 09:33:33 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-prepare-1/</guid>
      <description>泊松分布 泊松分布由二项分布演变而来。二项分布：
事件 A 在一次实验中发生的概率为 P ，将这个实验独立地重复 n 次，即做 n 次独立重复的伯努利实验，在这 n 次实验中事件A发生的次数记为 x ，概率有：
$$P(x=k)=C _ {n}^{k}p^{k}(1-p)^{n-k}$$，记为 \(X\sim B(n,p)\) ，期望 \(E=pn\)
认为在 n 趋于无穷大时，p 为无穷小，期望值不变为一常数，记 \(E=pn=\lambda\)
即：$$p=\frac{\lambda}{n}$$，则当 \(n \to +\infty\) 时，P 将趋于泊松分布：$$P(x=k)= e^{-\lambda}\frac{\lambda^{k}}{k!}$$
期望和方差都是 \(\lambda\) ，\(\lambda\) 表示一段时间内事件发生的次数。
泊松分布实例：
 一本书里，印刷错误的字的个数 一段时间内的次品率 某医院平均每小时出生的婴儿数 某网站每分钟的访问次数  独立增量过程 亦称可加过程（additive process)，是在不相交时段上增量相互独立的随机过程。
考虑实值过程 $$ X _ {t}, t \in T $$
如果对于任意参数 $$ t _ {0} &amp;lt; t _ {1} &amp;lt; &amp;hellip; t _ {n} $$</description>
    </item>
    
    <item>
      <title>Fundamentals of Matrix-Analytic Methods 学习笔记 -- 开坑篇</title>
      <link>https://chongg039.cn/post/fmam-start/</link>
      <pubDate>Thu, 12 Jul 2018 11:19:49 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/fmam-start/</guid>
      <description>教研室老板要求学习 Qi-Ming He 老师的这本书 Fundamentals of Matrix-Analytic Methods，于是准备开一个新坑，翻译一下这本书的关键内容，做做笔记，并对一些预备内容（概率分布、矩阵分析等）作解读。
文章的标题格式为“书名简称” + “中文章节名”，笔记将穿插在其中以代码块或其他形式存在。预备内容标题格式为“书名简称” + “预备内容：标题” + “大致章节名”。
以此来督促自己研究生期间好好学习。</description>
    </item>
    
    <item>
      <title>从 Reddit 愚人节像素大战说起</title>
      <link>https://chongg039.cn/post/2017-reddit-place/</link>
      <pubDate>Mon, 10 Apr 2017 23:01:33 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/2017-reddit-place/</guid>
      <description>&lt;p&gt;愚人节当天，我因为打球扭伤了自己的脚踝。那两天躺在床上无聊之余翻到了霍老师的一篇文章：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s/Pz0NZ2t9fd_-RNFj1rT0hA&#34;&gt;《参与这场线上大战之后，我觉得人类未来还是有希望的》&lt;/a&gt;     (公众号：歪理邪说)&lt;/p&gt;

&lt;p&gt;这篇文章让我产生了极大的兴趣，立刻忍着疼痛抱来了电脑，登上了 Reddit 参与了这场线上大战。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Cloudflare 为自定义域名的 Github 博客完成全站 HTTPS 化</title>
      <link>https://chongg039.cn/post/all-https/</link>
      <pubDate>Wed, 22 Mar 2017 22:51:09 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/all-https/</guid>
      <description>&lt;p&gt;跟风，响应 Web 世界的号召，决定把博客全站换成 HTTPS 访问，并记录下遇到的一些问题。&lt;/p&gt;

&lt;h3 id=&#34;github-page&#34;&gt;Github Page&lt;/h3&gt;

&lt;p&gt;原来博客是部署在云服务器上，后来觉得没有这个必要，也不想花精力在维护上面，就重新把博客放回了 Github Page 。因此下面的文字并不针对自有服务器的博客用户进行说明。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决 Go 中遍历 map 的随机化问题</title>
      <link>https://chongg039.cn/post/map-in-order/</link>
      <pubDate>Mon, 13 Mar 2017 18:51:20 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/map-in-order/</guid>
      <description>&lt;p&gt;在 air-server 中有一个函数，支持解析 URL 的 query 并返回字段中城市的数据，如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /aqi/cities?1=成都&amp;amp;2=北京&amp;amp;3=杭州&amp;amp;4=西安
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;客户端希望的返回值应该是按照输入顺序，即 1，2，3，4 返回的，但实际多次测试后得到的结果总会是不一样的顺序。想了想应该是 query 解析的结果，即&lt;code&gt;r.URL.Query()&lt;/code&gt;为 map 的原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go实现空气质量状况API服务器过程中的思考</title>
      <link>https://chongg039.cn/post/aqi-server-in-go/</link>
      <pubDate>Sat, 04 Mar 2017 16:27:52 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/aqi-server-in-go/</guid>
      <description>&lt;p&gt;学习Go之后第一个项目，是编写一个API服务器，提供城市AQI的JSON数据。&lt;/p&gt;

&lt;p&gt;既然要实现这个功能，要解决的问题一个是数据源，一个是Server。&lt;/p&gt;

&lt;p&gt;先说说数据源，如果仅仅和我们初步设想的一样，仅仅为我们的一款应用提供即时数据，那样只是做一个第三方数据的中转便可。不过为了以后可以针对性的做数据分析，还是需要将数据爬下来存在数据库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我为什么选择Go</title>
      <link>https://chongg039.cn/post/why-i-choose-go/</link>
      <pubDate>Mon, 27 Feb 2017 12:50:39 +0800</pubDate>
      
      <guid>https://chongg039.cn/post/why-i-choose-go/</guid>
      <description>&lt;p&gt;是的，我开始接触go语言了，如去年年底所说的那样。&lt;/p&gt;

&lt;p&gt;先说说我为什么不继续用Node，并不是因为这门语言不好。事实上，NodeJS作为一个争议颇多的“全栈”语言，才带我真正走进了编程世界。它的异步，并发，非阻塞，以及丰富的npm库，无一不证明了它在解决传统服务器端编程的很多非常棒的思想。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2016年终总结</title>
      <link>https://chongg039.cn/post/2016-summary/</link>
      <pubDate>Sat, 31 Dec 2016 16:59:03 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/2016-summary/</guid>
      <description>&lt;p&gt;年底了，总结一下这一年。&lt;/p&gt;

&lt;h4 id=&#34;工作室&#34;&gt;工作室&lt;/h4&gt;

&lt;p&gt;这一年有大半时间都是在创萌工作室度过的，也见证了创萌从当时的三五个人到现在的规模。&lt;/p&gt;

&lt;p&gt;工作室的巨总和迪哥算是我的导师。迪哥带着我从前端转向了nodejs，教会我如何作为一名全栈工程师来思考问题。而巨总眼界比较开阔，给我的更多是学习方法和技术趋势的指导。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 nodejs 模拟登陆电子科大信息门户并抓取信息</title>
      <link>https://chongg039.cn/post/mockland-uestc/</link>
      <pubDate>Thu, 08 Dec 2016 12:09:31 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/mockland-uestc/</guid>
      <description>&lt;p&gt;学校高层做了个公众号，把信息门户弄到微信上的浏览器上。本着干掉学校高层的一贯行事风格，觉得是时候搞一个正规的公众号来抢学校生意了。&lt;/p&gt;

&lt;p&gt;结果没想到并不是很顺利，信息门户登录有两个重定向页面，自己也对模拟请求服务器不是很熟悉，一步一步好歹是扒到了想要的数据，也浪费了好长时间。先拿出来了个命令行版本，还停留在 es5，准备熬过去考试月后全部重构成 es6，再加上流程控制，放到公众号上造福社会。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 服务器配置静态 IP 并 802.1x 拨号</title>
      <link>https://chongg039.cn/post/linux-server-staticip-8021x/</link>
      <pubDate>Sat, 12 Nov 2016 15:15:27 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/linux-server-staticip-8021x/</guid>
      <description>&lt;p&gt;终于布好工作室的服务器了。&lt;/p&gt;

&lt;p&gt;我写了个脚本一键部署静态ip和802.1x拨号：&lt;a href=&#34;https://gist.github.com/chongg039/3310467e329e00de3b6b04aaae646f3c&#34;&gt;ubuntu-server.sh&lt;/a&gt;，不想看我啰嗦的可以直接拿过来改改就能用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 vultr &#43; SS &#43; 锐速科学上网</title>
      <link>https://chongg039.cn/post/vultr-ss-serverspeed/</link>
      <pubDate>Mon, 03 Oct 2016 20:32:20 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/vultr-ss-serverspeed/</guid>
      <description>&lt;p&gt;接手工作室后，tesths 便把原来那个已经配置好的ss账号连同服务器一块给销了。平时ss又十分必要，就向他讨要了具体的方法，自己搭了一个。这里也是把方法贴出来。&lt;/p&gt;

&lt;h3 id=&#34;配置vultr主机&#34;&gt;配置vultr主机&lt;/h3&gt;

&lt;p&gt;V家的主机算得上是性价比较高的一款了，而且有日本和新加坡的线路，相对来说延迟比较稳定。截止我购买的时候是每个新用户有20刀的返利，还是比较划算的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决 ubuntu 下键盘错位问题</title>
      <link>https://chongg039.cn/post/ubuntu-keyboard-error/</link>
      <pubDate>Sun, 02 Oct 2016 15:43:36 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/ubuntu-keyboard-error/</guid>
      <description>&lt;p&gt;很悲催的键盘错位了，就这个系统有问题，以前也没遇到过。简而言之就是@和“互换，#打不出来等。问题不大，但是影响输入体验。
工作室的小伙伴都说我这电脑只有我会用。。。&lt;/p&gt;

&lt;p&gt;之前在网上搜到的解决办法是在终端输入：
&amp;gt;sudo dpkg-reconfigure keyboard-configuration
//需要安装keyboard-configuration&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ngrok实现内网穿透</title>
      <link>https://chongg039.cn/post/ngrok/</link>
      <pubDate>Sun, 18 Sep 2016 09:37:45 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/ngrok/</guid>
      <description>&lt;p&gt;今天想用nodejs写一个微信公众号服务，很尴尬的发现自己的腾讯云学生服务器已经三个月没续费被收回了。工作室的这台服务器又不是很想动，于是就想到前一段时间看的一个实现内网穿透的工具ngrok，花了一段时间部署在了自己的ubuntu上。又化了两块钱买了个域名，准备以后作为工作室测试来用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自用 Chrome 插件分享</title>
      <link>https://chongg039.cn/post/chrome-extensions/</link>
      <pubDate>Sat, 21 May 2016 15:45:01 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/chrome-extensions/</guid>
      <description>&lt;p&gt;这里会持续不断分享一些自己觉的好用的 Chrome 插件，有些也会弃用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搭建 Linux 开发环境</title>
      <link>https://chongg039.cn/post/build-ubuntu-environment/</link>
      <pubDate>Thu, 12 May 2016 19:29:07 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/build-ubuntu-environment/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;先说说我为啥要干这事儿。
前段时间迪哥要我们用node搞一个最小化 MEAN 产品，没想到只是在搭建开发环境上windows就各种不兼容，出现了许多奇奇怪怪的bug，再加上国内关于node的开发教程确实相对比较少，没有好的学习资源。搞了virtualbox虚拟机，但是内存和性能又开始捉急。干脆换到ubuntu，一步到位，特此记录下过程。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>说说es5中的闭包</title>
      <link>https://chongg039.cn/post/talk-about-closure/</link>
      <pubDate>Mon, 18 Apr 2016 19:26:22 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/talk-about-closure/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;匿名函数&lt;/strong&gt;：下面是最常见的一种&lt;strong&gt;函数表达式&lt;/strong&gt;的书写形式&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var functionName = function(arg0, arg1, arg2){
//函数体
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;即：创建一个函数，并将其复制给变量&lt;code&gt;functionName&lt;/code&gt;，这种情况下创建的函数叫做匿名函数(anonymous function)，&lt;strong&gt;因为&lt;/strong&gt;&lt;code&gt;function&lt;/code&gt;&lt;strong&gt;后面没有标识符&lt;/strong&gt;，其&lt;code&gt;name&lt;/code&gt;属性是空字符串。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>写在前面</title>
      <link>https://chongg039.cn/post/hello-world/</link>
      <pubDate>Sun, 17 Apr 2016 19:29:07 -0700</pubDate>
      
      <guid>https://chongg039.cn/post/hello-world/</guid>
      <description>&lt;h2 id=&#34;我为什么建博客&#34;&gt;我为什么建博客&lt;/h2&gt;

&lt;p&gt;大二本科加入创萌工作室学习前端，整个学习阶段对于笔记以及感悟的整理从印象，有道云转移到Quip，感觉最好还是有一个独立博客更为方便。在爬了两个星期的坑后使用Hexo+huno主题以及一些开源插件完成了整个博客的大致创建。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>